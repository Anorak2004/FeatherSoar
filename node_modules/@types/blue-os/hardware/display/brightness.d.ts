/**
 * 屏幕亮度
 * 接口声明: {"name": "blueos.hardware.display.brightness"}
 */
declare module '@blueos.hardware.display.brightness' {
  /**
   * @desc 获得当前屏幕亮度值。
   * @param {obj} 获得当前屏幕亮度值入参 {object}
   * @version 1
   */
  const getValue: (obj: {
    /**
     * 成功回调
     */
    success?: (data: {
      /**
       * @desc 屏幕亮度，取值范围 0-255
       */
      value: number
    }) => void
    /**
     * 	@desc 失败的回调函数
     * 	@param {data} 失败回调的返回值 {any}
     *	@param {code} 失败回调的返回状态码 {number}
     */
    fail?: (data: any, code: number) => void
    /**
     * 	@desc 执行结束后的回调
     */
    complete?: () => void
  }) => void

  /**
   * @desc 设置当前屏幕亮度值。
   * @param {obj} 设置当前屏幕亮度值入参 {object}
   * @version 1
   */
  const setValue: (obj: {
    /**
     * @desc 屏幕亮度，取值范围0-255
     */
    value: number
    /**
     * @desc 成功回调
     */
    success?: () => void
    /**
     * 	@desc 失败的回调函数
     * 	@param {data} 失败回调的返回值 {any}
     *	@param {code} 失败回调的返回状态码 {number}
     */
    fail?: (data: any, code: number) => void
    /**
     * @desc 执行结束后的回调
     */
    complete?: () => void
  }) => void

  /**
   * @desc 获得当前屏幕亮度模式。
   * @param {obj} 获得当前屏幕亮度模式入参 {object}
   * @version 1
   */
  const getMode: (obj: {
    /**
     * @desc 成功回调
     * @param {data} 回调返回值 {object}
     */
    success?: (data: {
      /**
       * @desc  0 为手动调节屏幕亮度,1 为自动调节屏幕亮度
       */
      mode: number
    }) => void

    /**
     * 	@desc 失败的回调函数
     * 	@param {data} 失败回调的返回值 {any}
     *	@param {code} 失败回调的返回状态码 {number}
     */
    fail?: (data: any, code: number) => void
    /**
     * @desc 执行结束后的回调
     */
    complete?: () => void
  }) => void

  /**
   * @desc 设置当前屏幕亮度模式。
   * @param {obj} 获得当前屏幕亮度模式入参 {object}
   * @version 1
   */
  const setMode: (obj: {
    /**
     * @desc 屏幕亮度，取值范围0-255
     */
    mode: number
    /**
     * @desc 成功回调
     */
    success?: () => void
    /**
     * 	@desc 失败的回调函数
     * 	@param {data} 失败回调的返回值 {any}
     *	@param {code} 失败回调的返回状态码 {number}
     */
    fail?: (data: any, code: number) => void
    /**
     * @desc 执行结束后的回调
     */
    complete?: () => void
  }) => void

  /**
   * @desc 点亮或熄灭屏幕。
   * @param {obj} 点亮或熄灭屏幕入参 {object}
   * @version 1
   */
  const setKeepScreenOn: (obj: {
    /**
     * @desc 是否保持屏幕常亮
     */
    keepScreenOn: boolean
    /**
     * @desc 成功回调
     */
    success?: () => void
    /**
     * 	@desc 失败的回调函数
     * 	@param {data} 失败回调的返回值 {any}
     *	@param {code} 失败回调的返回状态码 {number}
     */
    fail?: (data: any, code: number) => void
    /**
     * @desc 执行结束后的回调
     */
    complete?: () => void
  }) => void

  /**
   * @desc 监听当前屏幕亮度数据。如果多次调用，仅最后一次调用生效。
   * @param {obj} 监听当前屏幕亮度数据入参 {object}
   * @version 1
   */
  const subscribe: (obj: {
    callback: (data: {
      /**
       * @desc 屏幕亮度，取值范围 0-255
       */
      value: number
    }) => void
    /**
     * 	@desc 失败的回调函数
     * 	@param {data} 失败回调的返回值 {any}
     *	@param {code} 失败回调的返回状态码 {number}
     */
    fail?: (data: any, code: number) => void
  }) => void

  /**
   * @desc 取消监听屏幕亮度数据。
   * @version 1
   */
  const unsubscribe: () => void

  /**
   * @desc 同步获得当前屏幕亮度值。
   * @version 1
   * @returns 返回同步获得当前屏幕亮度值 {number}
   */
  const getValueSync: () => number


    /**
   * @desc 点亮或熄灭屏幕。
   * @param {obj} 点亮或熄灭屏幕入参 {object}
   * @version 1
   */
  const wakeScreenOn:(obj:{

    /**
     * @desc 是否点亮
     */
    screenOn:boolean
      /**
     * @desc 成功回调
     */
    success?: () => void
    /**
     * 	@desc 失败的回调函数
     * 	@param {data} 失败回调的返回值 {any}
     *	@param {code} 失败回调的返回状态码 {number}
     */
    fail?: (data: any, code: number) => void
    /**
     * @desc 执行结束后的回调
     */
    complete?: () => void
  })=>void
}
